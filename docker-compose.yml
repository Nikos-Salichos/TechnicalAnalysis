version: '3.4'


volumes:
  app-data:  # Define the shared volume

networks:
    postgres-db-network:
        driver: bridge

services:

  infrastructurehost:
    image: ${DOCKER_REGISTRY-}infrastructurehost
    container_name: ta-api
    depends_on:
      - "postgresql.api"
    build:
      context: .
      dockerfile: TechnicalAnalysis.Infrastructure.Host/Dockerfile
    user: root
    ports:
      - 5000:5000
      - 5001:5001
    environment:
     DB_CONNECTION_STRING: "Host=postgresql.api;Port=5432;Database=TechnicalAnalysis;Username=postgres;Password=admin"
    networks:
      - postgres-db-network
# Not working I must test the volume below
    volumes:
      - ../TechnicalAnalysis/TechnicalAnalysis.Infrastructure.Host/appsettings.prod.json:/app/appsettings.prod.json

  redis.api:
    image: redis
    container_name: ta-redis
    restart: always
    ports:
     - "6379:6379"
    environment:
     - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - postgres-db-network

  rabbitmq:
    image: rabbitmq:management
    container_name: ta-rmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - postgres-db-network

  postgresql.api:
    image: postgres:latest
    container_name: ta-postgresql
    restart: always
    ports:
     - "5432:5432"
    environment:
      POSTGRES_DB: "TechnicalAnalysis"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "admin"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes: 
       - ./postgres-data:/var/lib/postgresql/data
       # copy the sql script to create tables
       - ../TechnicalAnalysis/createTables.sql:/docker-entrypoint-initdb.d/createTables.sql
    networks:
       - postgres-db-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: ta-pgadmin
    restart: always
    environment:
        PGADMIN_DEFAULT_EMAIL: 'admin@admin.com'
        PGADMIN_DEFAULT_PASSWORD: 'admin'
    ports:
        - 16543:80
    networks:
        - postgres-db-network

  seq:
    container_name: ta-seq
    image: datalust/seq:latest
    ports:
      - 5341:80
    environment:
      - ACCEPT_EULA=Y 
    networks:
      - postgres-db-network